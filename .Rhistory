}
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 11:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
View(follower_list)
View(following_list)
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 21:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 22:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 28:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 29:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 31:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 34:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 50:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 55:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 6 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 75:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
if(i %% 6 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 1:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
try(follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
))
try(following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
))
if(i %% 6 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 75:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
tc_er = try({
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
tc_ing = try({
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
if(i %% 6 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(rtweet)
library(tidyverse)
library(tidygraph)
library(lubridate)
library(graphlayouts)
library(ggraph)
# turn off annoying warning
options(dplyr.summarise.inform=F)
# Twitter API authorization
api_key = "Rt2rEnIkvDy2i6BZ0ESJKt4Zt"
api_secret = "LL4fzmxlmXOfyNhJbTk8QtWXLsGoZgVRVoDLBj1lcHaI0nZiMv"
access_token = "2916667919-N5hEE2dgft6FZnFLNSIzfDAy2PCeLvkqsczjqzD"
access_secret = "6fDhZMXgGsnP1QwLAMJaUXj0yKnpMGaprv1UJqCogmnav"
appname = "hindsight-2021"
token <- create_token(
app = appname,
consumer_key = api_key,
consumer_secret = api_secret,
access_token = access_token,
access_secret = access_secret
)
## start collecting data
tw_user <- "amandaysu"
#Get followers and following of init user
init_user <- lookup_users(tw_user)
init_followers <- get_followers(tw_user,
n = init_user$followers_count,
retryonratelimit = T,
token = get_token())
init_following <- get_friends(tw_user,
n = init_user$friends_count,
retryonratelimit = T,
token = get_token())
init_follower_full <- lookup_users(init_followers$user_id)
init_following_full <- lookup_users(init_following$ids)
init_follower_full <- data.frame(lapply(init_follower_full,as.character), stringsAsFactors = F)
init_following_full <- data.frame(lapply(init_following_full,as.character), stringsAsFactors = F)
## screen for harvard location, descriptions
harvard_followers <- init_follower_full %>%
filter(grepl('cambridge|Cambridge|Harvard|harvard', location) |
grepl('harvard|Harvard|harv|h*rvard|crimson', description)) %>%
select(user_id,screen_name,created_at,followers_count,friends_count,favourites_count)
harvard_following <- init_following_full %>%
filter(grepl('cambridge|Cambridge|Harvard|harvard', location) |
grepl('harvard|Harvard|harv|h*rvard|crimson', description)) %>%
select(user_id,screen_name,created_at,followers_count,friends_count,favourites_count)
## combine following and followers for search
harvard_stacked <- rbind(harvard_followers, harvard_following)
# remove duplicates
harvard_stacked <- harvard_stacked[!duplicated(harvard_stacked), ]
#initialize lists
following_list <- vector(mode = "list", length = length(harvard_stacked$screen_name))
names(following_list) <- harvard_stacked$screen_name
follower_list <- vector(mode = "list", length = length(harvard_stacked$screen_name))
names(follower_list) <- harvard_stacked$screen_name
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 21:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
tc_er = try({
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
tc_ing = try({
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 1:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
tc_er = try({
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
tc_ing = try({
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 1:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
tc_er = try({
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
tc_ing = try({
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# crawl depth 1 followers/following with harvard affiliation, returns list of lists of user ids
for (i in 126:nrow(harvard_stacked)) {
message("Getting followers for user #", i, "/", nrow(harvard_stacked))
following_list_temp <- list()
follower_list_temp <- list()
tc_er = try({
follower_list[[i]] <- get_followers(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
tc_ing = try({
following_list[[i]] <- get_friends(
harvard_stacked$screen_name[i],
n = 5000,
retryonratelimit = TRUE
)
})
if(i %% 5 == 0){
message("sleeping for 5 min")
Sys.sleep(5*60)
}
}
# collapse lists to dataframes
follower_df <- bind_rows(follower_list, .id = "screen_name")
following_df <- bind_rows(following_list, .id = "screen_name")
# lookup user ids in each dataframe
follower_df <- follower_df %>%
left_join(lookup_users(follower_df$user_id) %>%
mutate(follower_name = screen_name) %>%
filter(grepl('cambridge|Cambridge|Harvard|harvard', location) |
grepl('harvard|Harvard|harv|h*rvard|crimson', description)) %>%
select(user_id, follower_name),
by = c("user_id" = "user_id")) %>%
select(screen_name, follower_name)
# collapse lists to dataframes
follower_df <- bind_rows(follower_list, .id = "screen_name")
following_df <- bind_rows(following_list, .id = "screen_name")
# write user id dataframes
write.csv(follower_df, file="saved_networks/follower_user_id_amanda.csv")
write.csv(following_df, file="saved_networks/following_user_id_amanda.csv")
setwd("~/Desktop/Econ 980EE/social_political/scripts")
#set wd
setwd("~/Desktop/Econ 980EE/social_political/scripts")
## read data
df <- read_sav("../data/CSS.TRENDS.94.06.SAV")
library(haven)
## read data
df <- read_sav("../data/CSS.TRENDS.94.06.SAV")
## read data
df <- read_sav("../data/CSS.TRENDS.94.06.SAV")
## drop empty columns
df <- Filter(function(x)!all(is.na(x)), df)
#sampling dimensions
sample_cat <- c("YEAR", "ACERECODE")
#sample data along dimensions
frac <- 0.25
df <- stratified(df, sample_cat, frac)
# get variable labels
get_label <- function(variable){
out <- c(variable, attributes(df[[variable]])$label)
return(out)
}
#get labels of each variable
labels <- lapply(colnames(df), get_label)
label_df <- as.data.frame(do.call(rbind, labels))
colnames(label_df) <- c("variable", "description")
View(labels)
View(label_df)
df$VIEW26
unique(df %>% select(YEAR, VIEW17) %>% na.omit() %>% pull(YEAR))
unique(df %>% select(YEAR, VIEW26) %>% na.omit() %>% pull(YEAR))
unique(df %>% select(YEAR, VIEW09) %>% na.omit() %>% pull(YEAR))
unique(df %>% select(YEAR, VIEW01) %>% na.omit() %>% pull(YEAR))
df %>% ggplot(aes(x = YEAR, y = VIEW01)) +
geom_point()
df %>% ggplot(aes(x = YEAR, y = mean(VIEW01))) +
geom_point()
df %>%
group_by(YEAR) %>%
summarize(VIEW01, mean) %>%
ggplot(aes(x = YEAR, y = VIEW01)) +
geom_point()
df %>%
group_by(YEAR) %>%
summarize(VIEW01, mean)
?summarize
df %>%
group_by(YEAR) %>%
summarize(health = mean(VIEW01))
df %>%
group_by(YEAR) %>%
summarize(health = mean(VIEW01, na.omit = TRUE))
df$VIEW01
df$STATE
unique(df$STATE)
df$STUDBORN_TFS
#libraries
library(tidyverse)
library(estimatr)
library(haven)
library(sjmisc)
library(texreg)
library(modelsummary)
library(splitstackshape)
#set wd
setwd("~/Desktop/Econ 980EE/social_political/scripts")
## read data
df <- read_sav("../data/CSS.TRENDS.94.06.SAV")
# get variable labels
get_label <- function(variable){
out <- c(variable, attributes(df[[variable]])$label)
return(out)
}
#get labels of each variable
labels <- lapply(colnames(df), get_label)
label_df <- as.data.frame(do.call(rbind, labels))
colnames(label_df) <- c("variable", "description")
View(label_df)
df$VIEW26
unique(df %>% select(YEAR, VIEW26) %>% drop_na %>% pull(YEAR))
setwd("~/Desktop/Gov 94JW/brazil_politics_networks")
library(tidyverse)
votes_df <- read_csv("../voting_data/votes.csv")
setwd("~/Desktop/Gov 94JW/brazil_politics_networks")
library(tidyverse)
votes_df <- read_csv("../voting_data/votes.csv")
votes_df <- read_csv("/voting_data/votes.csv")
votes_df <- read_csv("voting_data/votes.csv")
View(votes_df)
unique(votes_df$vote)
