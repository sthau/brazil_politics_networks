group_by(idProposicao) %>%
filter(centrality == max(centrality))
max_reg <- glm(formula, family=binomial(link='logit'), data=max_df)
return(max_reg)
}else if(type == 1){
min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(centrality == min(centrality))
min_reg <- glm(formula, family=binomial(link='logit'), data=min_df)
return(min_reg)
} else{
first_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(ordemAssinatura == 1)
first_reg <- glm(formula, family=binomial(link='logit'), data=first_df)
return(first_reg)
}
}
degree_base <- centrality_regressions("outcome ~ degree +  siglaPartidoAutor + coauthors", "degree",0)
centrality_regressions <- function(formula, centrality, type){
if(type == 0){
max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(!!centrality == max(!!centrality))
max_reg <- glm(formula, family=binomial(link='logit'), data=max_df)
return(max_reg)
}else if(type == 1){
min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(!!centrality == min(!!centrality))
min_reg <- glm(formula, family=binomial(link='logit'), data=min_df)
return(min_reg)
} else{
first_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(ordemAssinatura == 1)
first_reg <- glm(formula, family=binomial(link='logit'), data=first_df)
return(first_reg)
}
}
degree_base <- centrality_regressions("outcome ~ degree +  siglaPartidoAutor + coauthors", "degree",0)
summary(degree_base)
degree_base <- centrality_regressions("outcome ~ degree +  siglaPartidoAutor + coauthors", "degree",1)
summary(degree_base)
degree_base <- centrality_regressions("outcome ~ degree +  siglaPartidoAutor + coauthors", "degree",0)
summary(degree_base)
first_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(ordemAssinatura == 1)
deg_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == max(degree))
deg_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == min(degree))
collab_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == max(collab))
collab_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == min(collab))
eig_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == max(eigen))
eig_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == min(eigen))
library(stargazer)
deg1 <- glm(outcome ~ degree + coauthors, data = first_df, family = link("logit"))
deg1 <- glm(outcome ~ degree + coauthors, data = first_df, family=binomial(link='logit'))
deg2 <- glm(outcome ~ degree + coauthors + as.factor(siglaPartidoAutor), data = first_df, family=binomial(link='logit'))
deg3 <- glm(outcome ~ degree + coauthors, data = deg_max_df, family=binomial(link='logit'))
deg4 <- glm(outcome ~ degree + coauthors + as.factor(siglaPartidoAutor), data = deg_max_df, family=binomial(link='logit'))
stargazer(deg1, deg2, deg3, deg4)
deg1 <- glm(outcome ~ degree + coauthors, data = first_df, family=binomial(link='logit'))
deg2 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
deg3 <- glm(outcome ~ degree + coauthors, data = deg_max_df, family=binomial(link='logit'))
deg4 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = deg_max_df, family=binomial(link='logit'))
stargazer(deg1, deg2, deg3, deg4, omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
collab1 <- glm(outcome ~ collab + coauthors, data = first_df, family=binomial(link='logit'))
collab2 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
collab3 <- glm(outcome ~ collab + coauthors, data = collab_max_df, family=binomial(link='logit'))
collab4 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df, family=binomial(link='logit'))
stargazer(collab1, collab2, collab3, collab4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
eig1 <- glm(outcome ~ eigen + coauthors, data = first_df, family=binomial(link='logit'))
eig2 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
eig3 <- glm(outcome ~ eigen + coauthors, data = eig_max_df, family=binomial(link='logit'))
eig4 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = eig_max_df, family=binomial(link='logit'))
stargazer(eig1, eig2, eig3, eig4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
summary(eig3)
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
))
stacked_bills[["outcome"]][is.na(stacked_bills[["outcome"]])] <- 0
stacked_bills <- stacked_bills %>%
group_by(idProposicao) %>%
mutate(coauthors = n())
mean(stacked_bills$outcome)
outcome_list <- stacked_bills %>%
group_by(ultimoStatus_descricaoSituacao) %>%
count()
first_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(ordemAssinatura == 1)
deg_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == max(degree))
deg_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == min(degree))
collab_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == max(collab))
collab_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == min(collab))
eig_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == max(eigen))
eig_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == min(eigen))
deg1 <- glm(outcome ~ degree + coauthors, data = first_df, family=binomial(link='logit'))
deg2 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
deg3 <- glm(outcome ~ degree + coauthors, data = deg_max_df, family=binomial(link='logit'))
deg4 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = deg_max_df, family=binomial(link='logit'))
deg1 <- glm(outcome ~ degree + coauthors, data = first_df, family=binomial(link='logit'))
deg2 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
deg3 <- glm(outcome ~ degree + coauthors, data = deg_max_df, family=binomial(link='logit'))
deg4 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = deg_max_df, family=binomial(link='logit'))
collab1 <- glm(outcome ~ collab + coauthors, data = first_df, family=binomial(link='logit'))
collab2 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
collab3 <- glm(outcome ~ collab + coauthors, data = collab_max_df, family=binomial(link='logit'))
collab4 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df, family=binomial(link='logit'))
eig1 <- glm(outcome ~ eigen + coauthors, data = first_df, family=binomial(link='logit'))
eig2 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
eig3 <- glm(outcome ~ eigen + coauthors, data = eig_max_df, family=binomial(link='logit'))
eig4 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = eig_max_df, family=binomial(link='logit'))
stargazer(deg1, deg2, deg3, deg4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
stargazer(deg1, deg2, deg3, deg4,
omit = 'siglaPartidoAutor')
outcome_list <- stacked_bills %>%
group_by(ultimoStatus_descricaoSituacao) %>%
count()
view(outcome_list)
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei|lei", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
))
stacked_bills[["outcome"]][is.na(stacked_bills[["outcome"]])] <- 0
stacked_bills <- stacked_bills %>%
group_by(idProposicao) %>%
mutate(coauthors = n())
mean(stacked_bills$outcome)
outcome_list <- stacked_bills %>%
group_by(ultimoStatus_descricaoSituacao) %>%
count()
view(stacked_bills)
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei|lei|Legislação", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
))
stacked_bills[["outcome"]][is.na(stacked_bills[["outcome"]])] <- 0
stacked_bills <- stacked_bills %>%
group_by(idProposicao) %>%
mutate(coauthors = n())
mean(stacked_bills$outcome)
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei|Legislação", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id"))
outcome_list <- stacked_bills %>%
group_by(ultimoStatus_descricaoSituacao) %>%
count()
outcome_list
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills$descricaoTipo
unique(stacked_bills$descricaoTipo)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
))
stacked_bills[["outcome"]][is.na(stacked_bills[["outcome"]])] <- 0
stacked_bills <- stacked_bills %>%
group_by(idProposicao) %>%
mutate(coauthors = n())
mean(stacked_bills$outcome)
outcome_list <- stacked_bills %>%
group_by(ultimoStatus_descricaoSituacao) %>%
count()
outcome_list
stacked_bills <- stacked_bills %>%
filter(grepl("Lei", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
)) %>%
filter(ultimoStatus_descricaoSituacao != "Tramitando em Conjunto")
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
)) %>%
filter(ultimoStatus_descricaoSituacao != "Tramitando em Conjunto")
stacked_bills[["outcome"]][is.na(stacked_bills[["outcome"]])] <- 0
stacked_bills <- stacked_bills %>%
group_by(idProposicao) %>%
mutate(coauthors = n())
mean(stacked_bills$outcome)
outcome_list <- stacked_bills %>%
group_by(ultimoStatus_descricaoSituacao) %>%
count()
first_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(ordemAssinatura == 1)
deg_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == max(degree))
deg_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == min(degree))
collab_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == max(collab))
collab_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == min(collab))
eig_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == max(eigen))
eig_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == min(eigen))
deg1 <- glm(outcome ~ degree + coauthors, data = first_df, family=binomial(link='logit'))
deg2 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
deg3 <- glm(outcome ~ degree + coauthors, data = deg_max_df, family=binomial(link='logit'))
deg4 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = deg_max_df, family=binomial(link='logit'))
collab1 <- glm(outcome ~ collab + coauthors, data = first_df, family=binomial(link='logit'))
collab2 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
collab3 <- glm(outcome ~ collab + coauthors, data = collab_max_df, family=binomial(link='logit'))
collab4 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df, family=binomial(link='logit'))
eig1 <- glm(outcome ~ eigen + coauthors, data = first_df, family=binomial(link='logit'))
eig2 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
eig3 <- glm(outcome ~ eigen + coauthors, data = eig_max_df, family=binomial(link='logit'))
eig4 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = eig_max_df, family=binomial(link='logit'))
stargazer(deg1, deg2, deg3, deg4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
stargazer(collab1, collab2, collab3, collab4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
stargazer(eig1, eig2, eig3, eig4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
unique(stacked_bills$descricaoTipo)
mean(stacked_bills$outcome)
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
)) %>%
filter(ultimoStatus_descricaoSituacao != "Tramitando em Conjunto")
stacked_bills[["outcome"]][is.na(stacked_bills[["outcome"]])] <- 0
stacked_bills <- stacked_bills %>%
group_by(idProposicao) %>%
mutate(coauthors = n())
mean(stacked_bills$outcome)
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
)) %>%
filter(ultimoStatus_descricaoSituacao != "Tramitando em Conjunto")
stacked_bills[["outcome"]][is.na(stacked_bills[["outcome"]])] <- 0
stacked_bills <- stacked_bills %>%
group_by(idProposicao) %>%
mutate(coauthors = n())
mean(stacked_bills$outcome)
outcome_list <- stacked_bills %>%
group_by(ultimoStatus_descricaoSituacao) %>%
count()
first_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(ordemAssinatura == 1)
deg_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == max(degree))
deg_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == min(degree))
collab_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == max(collab))
collab_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == min(collab))
eig_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == max(eigen))
eig_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == min(eigen))
deg1 <- glm(outcome ~ degree + coauthors, data = first_df, family=binomial(link='logit'))
deg2 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
deg3 <- glm(outcome ~ degree + coauthors, data = deg_max_df, family=binomial(link='logit'))
deg4 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = deg_max_df, family=binomial(link='logit'))
collab1 <- glm(outcome ~ collab + coauthors, data = first_df, family=binomial(link='logit'))
collab2 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
collab3 <- glm(outcome ~ collab + coauthors, data = collab_max_df, family=binomial(link='logit'))
collab4 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df, family=binomial(link='logit'))
eig1 <- glm(outcome ~ eigen + coauthors, data = first_df, family=binomial(link='logit'))
eig2 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
eig3 <- glm(outcome ~ eigen + coauthors, data = eig_max_df, family=binomial(link='logit'))
eig4 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = eig_max_df, family=binomial(link='logit'))
deg1 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor*degree, data = first_df, family=binomial(link='logit'))
deg1 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor*degree, data = first_df, family=binomial(link='logit'))
summary(deg1)
deg1 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor*eigen, data = first_df, family=binomial(link='logit'))
summary(deg1)
stargazer(deg2, deg4, collab2, collab4, eig2, eig4,
omit = 'siglaPartidoAutor')
deg_min_df
view(deg_min_df)
centrality_df$degree <- as.numeric(centrality_df$degree)
centrality_df$collab <- as.numeric(centrality_df$collab)
centrality_df$eigen <- as.numeric(centrality_df$eigen)
stacked_bills <- rbind.data.frame(bills55 %>% mutate(congress = 55),
bills54 %>% mutate(congress = 54),
bills53 %>% mutate(congress = 53),
bills52 %>% mutate(congress = 52))
stacked_bills$idDeputadoAutor <- as.character(stacked_bills$idDeputadoAutor)
stacked_bills$siglaPartidoAutor <- as.factor(stacked_bills$siglaPartidoAutor)
stacked_bills <- stacked_bills %>%
filter(grepl("Lei", descricaoTipo)) %>%
left_join(centrality_df, by = c("congress" = "congress", "idDeputadoAutor" = "id")) %>%
mutate(outcome = case_when(
ultimoStatus_descricaoSituacao ==  "Aguardando Apreciação pelo Senado Federal" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Apreciação do Veto" ~ 1,
ultimoStatus_descricaoSituacao == "Transformado em Norma Jurídica" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Encaminhamento" ~ 1,
ultimoStatus_descricaoSituacao == "Aguardando Parecer" ~ 1,
)) %>%
filter(ultimoStatus_descricaoSituacao != "Tramitando em Conjunto")
stacked_bills[["outcome"]][is.na(stacked_bills[["outcome"]])] <- 0
stacked_bills <- stacked_bills %>%
group_by(idProposicao) %>%
mutate(coauthors = n())
mean(stacked_bills$outcome)
outcome_list <- stacked_bills %>%
group_by(ultimoStatus_descricaoSituacao) %>%
count()
first_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(ordemAssinatura == 1)
deg_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == max(degree))
deg_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(degree == min(degree))
collab_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == max(collab))
collab_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(collab == min(collab))
eig_max_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == max(eigen))
eig_min_df <- stacked_bills %>%
group_by(idProposicao) %>%
filter(eigen == min(eigen))
deg1 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
deg2 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
deg3 <- glm(outcome ~ degree + coauthors, data = deg_max_df, family=binomial(link='logit'))
deg4 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = deg_max_df, family=binomial(link='logit'))
collab1 <- glm(outcome ~ collab + coauthors, data = first_df, family=binomial(link='logit'))
collab2 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
collab3 <- glm(outcome ~ collab + coauthors, data = collab_max_df, family=binomial(link='logit'))
collab4 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df, family=binomial(link='logit'))
eig1 <- glm(outcome ~ eigen + coauthors, data = first_df, family=binomial(link='logit'))
eig2 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
eig3 <- glm(outcome ~ eigen + coauthors, data = eig_max_df, family=binomial(link='logit'))
eig4 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = eig_max_df, family=binomial(link='logit'))
stargazer(deg1, deg2, deg3, deg4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
stargazer(collab1, collab2, collab3, collab4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
stargazer(eig1, eig2, eig3, eig4,
omit = 'siglaPartidoAutor', omit.labels = 'Party Fixed Effect')
stargazer(deg2, deg4, collab2, collab4, eig2, eig4,
omit = 'siglaPartidoAutor')
view(collab_max_df)
deg1 <- lm(outcome ~ degree + coauthors + siglaPartidoAutor, data = first_df)
deg3 <- lm(outcome ~ degree + coauthors + siglaPartidoAutor, data = deg_max_df)
deg4 <- glm(outcome ~ degree + coauthors + siglaPartidoAutor, data = deg_max_df, family=binomial(link='logit'))
collab1 <- lm(outcome ~ collab + coauthors + siglaPartidoAutor, data = first_df)
collab2 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
collab4 <- lm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df)
collab4 <- glm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df, family=binomial(link='logit'))
eig1 <- lm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = first_df)
eig2 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = first_df, family=binomial(link='logit'))
eig3 <- lm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = eig_max_df)
eig4 <- glm(outcome ~ eigen + coauthors + siglaPartidoAutor, data = eig_max_df, family=binomial(link='logit'))
stargazer(deg1, deg3, collab1, collab3, eig1, eig3,
omit = 'siglaPartidoAutor')
collab1 <- lm(outcome ~ collab + coauthors + siglaPartidoAutor, data = first_df)
collab4 <- lm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df)
collab3 <- lm(outcome ~ collab + coauthors + siglaPartidoAutor, data = collab_max_df)
stargazer(deg1, deg3, collab1, collab3, eig1, eig3,
omit = 'siglaPartidoAutor')
deg3 <- lm(outcome ~ degree + coauthors + siglaPartidoAutor + degree*siglaPartidoAutor, data = deg_max_df)
summary(deg3)
deg3 <- lm(outcome ~ degree + coauthor + degree*siglaPartidoAutor, data = deg_max_df)
deg3 <- lm(outcome ~ degree + coauthors + degree*siglaPartidoAutor, data = deg_max_df)
summary(deg3)
deg3 <- lm(outcome ~ coauthors + degree*siglaPartidoAutor, data = deg_max_df)
summary(deg3)
